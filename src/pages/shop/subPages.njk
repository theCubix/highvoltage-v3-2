---
pagination:
  data: shop.subPagesAirtable
  size: 1
  alias: localisedPage
  addAllPagesToCollections: true
permalink: "{{ nav.shop[localisedPage.lang].pathPrefix }}/{{ localisedPage.productNumber | lower }}/index.html"
eleventyComputed:
  data: ""
  translationKey: "{{ localisedPage.productNumber }}"
  title: ""
  metaDescription: ""
  lastMod: "11-11-2020"
---

{% block content %}

  {% set prismicContent = shop.subPagesPrismic | contentFilter(localisedPage) %}
  {% set data = prismicContent.data %}
  {% set lang = localisedPage.lang %}
  {% from 'components/responsive-image.njk' import responsiveImage %}

  {% set pathPrefix = nav.shop[localisedPage.lang].pathPrefix %}

  {% set TRANSLATIONS = {
    size: {
      'de-ch': 'Grösse',
      'en-gb': 'Size'
    },
    sizes: {
      'de-ch': 'Grössen',
      'en-gb': 'Sizes'
    },
    price: {
      'de-ch': 'Preis (exklusiv Porto-Kosten)',
      'en-gb': 'Price (excluding postage)'
    },
    addToCart: {
      'de-ch': 'In den Warenkorb',
      'en-gb': 'Add to cart'
    }
  }%}

  <div class="stack stack--7">

    <section class="container">
      <div class="two-columns">
        <div>
          {{ responsiveImage(data.main_image,alt="",rounded=true) }}
        </div>
        <div class="product-info stack stack--4">
          <h1 class="as-h2">{{ data.product_name | renderAsText | safe }}</h1>
          <ul>  
            {% for usp in data.usps %}
              <li>{{ usp.usp | renderAsHTML | safe }}</li>
            {% endfor %}
            {% for size in data.product_group %}
              {% if size.sku == localisedPage.productNumber %}
                <li>{{TRANSLATIONS.size[lang]}}: {{ size.product_label }}</li>
              {% endif %}
            {% endfor %}
          </ul>

          <div class="stack stack--1">
            <p class="uppercase">{{ TRANSLATIONS.sizes[lang] }}</p>
            <div>
              <ul class="flex-list">
                {% for size in data.product_group %}
                  {% set variantsUrl = pathPrefix+"/"+size.sku+"/" %}
                  <li>
                    <a
                      class="variants-button uppercase"
                      href="{{ variantsUrl | lower }}"
                      {% if page.url == (variantsUrl | lower) %}
                        aria-current="true"
                      {% endif %}
                    >
                      {{ size.product_label }}
                    </a>
                  </li>
                {% endfor %}
              </ul>
            </div>

          </div>

          <div class="stack stack--1">
            <p class="uppercase">
              {{ TRANSLATIONS.price[lang] }}
            </p>

            <div>
              <div class="flex-list flex-list--bigger-gap">
                <p class="as-h3">
                  CHF {{ localisedPage.basePrice }}
                </p>
                <div
                  id="buttonWrapper"
                  data-stock="{{ localisedPage.stock }}"
                  data-text="{{ TRANSLATIONS.addToCart[lang] }}"
                  data-sku="{{ localisedPage.productNumber }}"
                >
                </div>
              </div>
            </div>
          </div>

        </div>
      </div>
    </section>

    <section>
      <div class="container">
        <ul class="grid">
          {% for image in data.supplemental_images %}
            <li>
              {{ responsiveImage(image.square_image,alt="",rounded=true) }}
            </li>
          {% endfor %}
        </ul>
      </div>
    </section>

    <script>
      // get reference to wrapper element
      var wrapper = document.querySelector('#buttonWrapper');

      // get amount in stock and display text
      var {
        stock,
        text,
        sku
      } = wrapper.dataset;

      function addToCart(sku) {
        var itemToAdd = {
          sku: sku,
          quantity: 1,
          basePrice: 25
        };
        var strItemToAdd = JSON.stringify(itemToAdd);
        localStorage.setItem('cart',strItemToAdd);
        console.log(JSON.parse(localStorage.getItem('cart')));
      }

      // check if localStorage is supported and if items in stock
      if(window.localStorage!==undefined && stock > 0) {
        // create the button node
        var button = document.createElement('button');
        // set text on button
        button.textContent = text;
        // set class on button
        button.setAttribute('class', 'button');
        // add eventListener on button
        button.addEventListener('click', function(e) {
          addToCart(sku)
        });
        wrapper.appendChild(button);
      }
    </script>

  </div>

{% endblock %}
{% extends 'layouts/base.njk' %}
